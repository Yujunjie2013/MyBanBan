<?xml version="1.0" encoding="utf-8"?>
<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/activity_detail"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true"
    tools:context="com.example.yune.mybanban.ui.DetailActivity">


    <android.support.design.widget.AppBarLayout
        android:id="@+id/appbar"
        android:fitsSystemWindows="true"
        android:layout_width="match_parent"
        android:layout_height="240dp"
        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar">
        <!--可实现Toolbar的折叠效果。CollapsingToolbarLayout的子视图类似与LinearLayout垂直方向排放。
        使用CollapsingToolbarLayout实现折叠效果，需要注意3点

        1. AppBarLayout的高度固定
        2. CollapsingToolbarLayout的子视图设置layout_collapseMode属性
        3.关联悬浮视图设置app:layout_anchor，app:layout_anchorGravity属性
        -->
        <android.support.design.widget.CollapsingToolbarLayout
            android:id="@+id/collapsing_toolbar_layout"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:contentScrim="?attr/colorPrimary"
            app:layout_scrollFlags="scroll|exitUntilCollapsed"
            app:title="@string/detail_title">


            <!--app:layout_collapseMode="parallax | pin”
            子视图的折叠模式，在子视图设置，有两种
            “pin”：固定模式，在折叠的时候最后固定在顶端；
            “parallax”：视差模式，在折叠的时候会有个视差折叠的效果。
            我们可以在布局中使用属性app:layout_collapseMode=”parallax”来改变。

            app:layout_collapseParallaxMultiplier="1.0"CollapsingToolbarLayout滑动时，子视图的视觉差，
            可以通过属性app:layout_collapseParallaxMultiplier=”0.6”改变。值de的范围[0.0,1.0]，值越大视察越大。
            -->


            <ImageView
                android:fitsSystemWindows="true"
                android:id="@+id/back_image"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:scaleType="centerCrop"
                android:src="@mipmap/back"
                app:layout_collapseMode="parallax"
                app:layout_collapseParallaxMultiplier="0.7" />


            <android.support.v7.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                app:layout_collapseMode="pin" />


        </android.support.design.widget.CollapsingToolbarLayout>
    </android.support.design.widget.AppBarLayout>

    <!--
    NestedScrollView就相当于是一个ScrollView，是一个可滚动的View
    为了ToolBar可以滚动，CoordinatorLayout里面,放一个带有可滚动的View.比如放的是ViewPager,ListView,RecycleView
    可以在ViewPager里面是放了RecylerView的,即是可以滚动的View。-->
    <android.support.v4.widget.NestedScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_behavior="@string/appbar_scrolling_view_behavior">

        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_marginBottom="16dp"
            android:layout_marginTop="16dp"
            android:text="@string/detail"
            android:textSize="16sp" />
    </android.support.v4.widget.NestedScrollView>

    <android.support.v4.view.ViewPager

        android:layout_width="match_parent"
        android:layout_height="match_parent" />

    <!--其他视图-->
    <!--app:layout_anchor="@id/appbar"-->
    <!--提供了一个layout_anchor的属性，连同layout_anchorGravity一起，可以用来放置与其他视图关联在一起的悬浮视图（如FloatingActionButton）。-->
    <!--与某一个AppBarLayout控件相关联-->

    <android.support.design.widget.FloatingActionButton
        android:id="@+id/actionButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_margin="16dp"
        android:src="@android:drawable/ic_menu_share"
        app:fabSize="mini"
        app:layout_anchor="@id/appbar"
        app:layout_anchorGravity="bottom|right|end" />


</android.support.design.widget.CoordinatorLayout>
